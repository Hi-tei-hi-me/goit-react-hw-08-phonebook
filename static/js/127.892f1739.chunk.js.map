{"version":3,"file":"static/js/127.892f1739.chunk.js","mappings":"qOAEaA,EAAgBC,EAAAA,EAAAA,IAAH,wG,kDCAbC,EAAOD,EAAAA,EAAAA,KAAH,0GAOJE,EAAQF,EAAAA,EAAAA,MAAH,4GAOLG,EAAQH,EAAAA,EAAAA,MAAH,sFAMLI,EAAWJ,EAAAA,EAAAA,OAAH,yE,uCCPRK,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MA0BjB,OAzBsBC,EAAAA,EAAAA,KAAdC,WA0BN,SAACC,EAAA,EAAD,KAEA,UAACT,EAAD,CAAMU,SA1Ba,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACjBT,GACEU,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGlCE,KAAKC,EAAAA,IACLD,MAAK,SAAAE,IACJC,EAAAA,EAAAA,IAAM,sCAAD,OAAuCD,EAASE,KAAKC,KAArD,KAA8D,CACjEC,MAAM,SAAC,MAAD,CAAwBC,KAAM,GAAIC,MAAM,aAEjD,IACAC,OAAM,kBACLN,EAAAA,EAAAA,IAAM,iEAAkE,CACtEG,MAAM,SAAC,MAAD,CAAoBC,KAAM,GAAIC,MAAM,aAFvC,IAKTf,EAAKiB,OACN,EAK+BC,aAAa,MAA3C,WACE,UAAC9B,EAAD,YACE,SAAC,MAAD,CAAkB0B,KAAM,GAAIC,MAAM,aAClC,SAAC1B,EAAD,CAAO8B,KAAK,QAAQP,KAAK,QAAQQ,YAAY,iBAAiBC,UAAQ,QAExE,UAACjC,EAAD,YACE,SAAC,MAAD,CAAmB0B,KAAM,GAAIC,MAAM,aACnC,SAAC1B,EAAD,CAAO8B,KAAK,WAAWP,KAAK,WAAWQ,YAAY,WAAWC,UAAQ,QAExE,UAAC/B,EAAD,CAAU6B,KAAK,SAAf,oBAEE,SAAC,MAAD,CAAgBL,KAAM,GAAIC,MAAM,2BAIvC,ECxDc,SAASO,IACtB,OACE,UAACrC,EAAD,YACE,SAAC,KAAD,WACE,wCAEF,wCAEE,kBAFF,2BAKA,SAACM,EAAD,MAGL,C","sources":["pages/Login.styled.js","components/forms/LogInForm/LogInForm.styled.js","components/forms/LogInForm/LogInForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoginPageWrap = styled.div`\n  width: max-content;\n  @media (max-width: 767px) {\n    margin: 0 auto;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  line-height: 1.71;\n  border-radius: 5px;\n`;\n\nexport const LoginBtn = styled.button`\n  margin: 0 auto;\n  &:hover,\n  &:focus {\n  }\n`;\n","import { unwrapResult } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport {\n  MdOutlineAccountCircle,\n  MdAlternateEmail,\n  MdOutlinePassword,\n  MdOutlineLogin,\n} from 'react-icons/md';\nimport { BsPatchExclamation } from 'react-icons/bs';\nimport { Form, Label, Input, LoginBtn } from './LogInForm.styled';\nimport { useAuth } from 'utils/hooks';\nimport { logIn } from 'redux/authorization/operations';\nimport { Loader } from 'components/reusables/Loader/Loader';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const { isLoading } = useAuth();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .then(unwrapResult)\n      .then(response => {\n        toast(`You have successfully logged in as ${response.user.name}!`, {\n          icon: <MdOutlineAccountCircle size={25} color=\"#327047\" />,\n        });\n      })\n      .catch(() =>\n        toast(`Something's wrong. Please check the information and try again.`, {\n          icon: <BsPatchExclamation size={25} color=\"#aa8c3f\" />,\n        })\n      );\n    form.reset();\n  };\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        <MdAlternateEmail size={28} color=\"#364a4a\" />\n        <Input type=\"email\" name=\"email\" placeholder=\"email@mail.com\" required />\n      </Label>\n      <Label>\n        <MdOutlinePassword size={28} color=\"#364a4a\" />\n        <Input type=\"password\" name=\"password\" placeholder=\"password\" required />\n      </Label>\n      <LoginBtn type=\"submit\">\n        Log In\n        <MdOutlineLogin size={20} color=\"rgb(77, 104, 104)\" />\n      </LoginBtn>\n    </Form>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { LoginPageWrap } from './Login.styled';\nimport { LoginForm } from 'components/forms/LogInForm/LogInForm';\n\nexport default function Login() {\n  return (\n    <LoginPageWrap>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <h2>\n        Login form\n        <br />\n        for registered Users\n      </h2>\n      <LoginForm />\n    </LoginPageWrap>\n  );\n}\n"],"names":["LoginPageWrap","styled","Form","Label","Input","LoginBtn","LoginForm","dispatch","useDispatch","useAuth","isLoading","Loader","onSubmit","evt","preventDefault","form","currentTarget","logIn","email","elements","value","password","then","unwrapResult","response","toast","user","name","icon","size","color","catch","reset","autoComplete","type","placeholder","required","Login"],"sourceRoot":""}