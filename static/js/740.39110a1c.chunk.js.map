{"version":3,"file":"static/js/740.39110a1c.chunk.js","mappings":"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","sources":["components/forms/ContactAddForm/ContactAddForm.styled.js","redux/contacts/selectors.js","components/forms/ContactAddForm/ContactAddForm.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contact.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/searchForm/selectors.js","redux/selectors.js","components/Contacts/ListOfContacts.jsx","components/ContactsFilter/ContactsFilter.styled.js","components/ContactsFilter/ContactsFilter.jsx","components/reusables/Notifications/Notifications.styled.js","pages/ContactsBook.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  border: 1.5px solid gray;\n  border-radius: 10px;\n  margin: 0 auto;\n  padding: 15px;\n  background-color: rgba(151, 99, 99, 0.8);\n`;\n\nexport const FormTable = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nexport const FormLabels = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  justify-content: space-around;\n  gap: 5px;\n  width: max-content;\n`;\n\nexport const Label = styled.label``;\n\nexport const FormInputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  width: 100%;\n`;\n\nexport const Input = styled.input`\n  border-radius: 5px;\n`;\n\nexport const AddBtn = styled.button`\n  margin: 0 auto;\n`;\n","export const selectAllContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport {\n  MdPersonAddDisabled,\n  MdPersonAdd,\n  MdPerson,\n  MdPhone,\n  MdAddToHomeScreen,\n} from 'react-icons/md';\nimport { BsPatchExclamation } from 'react-icons/bs';\nimport {\n  FormContainer,\n  FormTable,\n  FormLabels,\n  Label,\n  FormInputs,\n  Input,\n  AddBtn,\n} from './ContactAddForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectAllContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const newContact = { name, number };\n    if (\n      contacts.some(contact => {\n        return contact.name.trim().toLowerCase() === newContact.name.trim().toLowerCase();\n      })\n    ) {\n      return toast(`${newContact.name} is already in your Book`, {\n        icon: <MdPersonAddDisabled size={25} color=\"#ccba21\" />,\n      });\n    } else {\n      dispatch(addContact(newContact))\n        .then(response =>\n          toast(`${newContact.name} was successfully added to your Book`, {\n            icon: <MdPersonAdd size={28} color=\"#327047\" />,\n          })\n        )\n        .catch(error => toast(`Oops!`, error.message), {\n          icon: <BsPatchExclamation size={30} color=\"#5d3d79\" />,\n        });\n      resetForm();\n    }\n  };\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n  return (\n    <FormContainer autoComplete=\"off\" onSubmit={handleSubmit}>\n      <FormTable>\n        <FormLabels>\n          <Label htmlFor=\"name\">\n            <MdPerson size={28} color=\"#4e4e4e\" />\n          </Label>\n          <Label htmlFor=\"number\">\n            <MdPhone size={28} color=\"#4e4e4e\" />\n          </Label>\n        </FormLabels>\n        <FormInputs>\n          <Input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"name\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"phone №\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={number}\n            onChange={handleChange}\n            required\n          />\n        </FormInputs>\n      </FormTable>\n      <AddBtn type=\"submit\">\n        Add contact <MdAddToHomeScreen size={20} color=\"rgb(77, 104, 104)\" />\n      </AddBtn>\n    </FormContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  margin-top: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  border: 1.5px solid gray;\n  border-radius: 10px;\n  padding: 15px;\n  background-color: rgba(75, 100, 100, 0.8);\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 5px;\n  color: #fff;\n  text-decoration: inherit;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:has(button:hover, button:focus) p {\n    text-decoration: underline;\n  }\n`;\n\nexport const ContactInfo = styled.p`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  @media (max-width: 470px) {\n    flex-direction: column;\n    gap: 1px;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  flex-shrink: 0;\n  @media (max-width: 470px) {\n    padding: 10px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { MdPersonRemove, MdDeleteForever } from 'react-icons/md';\nimport { BsPatchExclamation } from 'react-icons/bs';\nimport { Item, ContactInfo, DeleteBtn } from './Contacts.styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectAllContacts } from 'redux/contacts/selectors';\n\nexport const Contact = ({ id, name, number }) => {\n  const [idToDelete, setIdToDelete] = useState('');\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectAllContacts);\n\n  const handleDelete = async () => {\n    setIdToDelete(id);\n    try {\n      await dispatch(deleteContact(id));\n      toast(`${name} was removed from your Book`, {\n        icon: <MdPersonRemove size={25} color=\"#b24a4a\" />,\n      });\n    } catch (error) {\n      toast(`Oops!`, error.message, { icon: <BsPatchExclamation size={40} color=\"#5d3d79\" /> });\n    }\n  };\n\n  const DeleteInProgress = isLoading && id === idToDelete;\n\n  return (\n    <Item>\n      <ContactInfo>\n        <span>{name}:</span>\n        <span>{number}</span>\n      </ContactInfo>\n      <DeleteBtn type=\"button\" onClick={handleDelete} disabled={DeleteInProgress}>\n        <MdDeleteForever size={22} color=\"#976363\" />\n      </DeleteBtn>\n    </Item>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectAllContacts } from './contacts/selectors';\nimport { selectFilter } from './searchForm/selectors';\n\nexport const getFilteredList = createSelector(\n  [selectAllContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.trim().toLowerCase();\n    return contacts.filter(({ name }) => name.trim().toLowerCase().includes(normalizedFilter));\n  }\n);\n","import { useSelector } from 'react-redux';\nimport { Contact } from './Contact';\nimport { ContactsList } from './Contacts.styled';\nimport { getFilteredList } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const listOfContacts = useSelector(getFilteredList);\n  return (\n    <ContactsList>\n      {listOfContacts.map(({ id, name, number }) => {\n        return <Contact key={id} id={id} name={name} number={number} />;\n      })}\n    </ContactsList>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n`;\n\nexport const Label = styled.label`\n  width: fit-content;\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  width: 50%;\n  border-radius: 7px;\n  @media (max-width: 767px) {\n    width: 100%;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { MdPersonSearch } from 'react-icons/md';\nimport { SearchForm, Label, Input } from './ContactsFilter.styled';\nimport { setFilter } from 'redux/searchForm/filterSlice';\nimport { selectFilter } from 'redux/searchForm/selectors';\nimport { selectAllContacts } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleChange = evt => dispatch(setFilter(evt.target.value));\n\n  return (\n    <SearchForm>\n      <Label htmlFor=\"filter\">\n        <MdPersonSearch size={25} color=\"#4e4e4e\" />\n        Find by name:\n      </Label>\n      <Input\n        autoFocus\n        disabled={!filter && contacts.length < 3}\n        name=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </SearchForm>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const NothingAdded = styled.div`\n  margin: 15px auto;\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  justify-content: center;\n  padding: 20px 40px;\n  border: 1.5px solid #cc9b16;\n  border-radius: 10px;\n  background-color: rgba(236, 215, 109, 0.9);\n  color: #2e2e2e;\n`;\n\nexport const NotFound = styled.div`\n  margin: 15px auto;\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  justify-content: center;\n  padding: 20px 40px;\n  border: 1.5px solid #153c80;\n  border-radius: 10px;\n  background-color: rgba(150, 183, 207, 0.9);\n  color: #393939;\n`;\n\nexport const Error = styled.div`\n  margin: 15px auto;\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  justify-content: center;\n  padding: 20px 40px;\n  border: 1.5px solid #474747;\n  border-radius: 10px;\n  background-color: rgba(211, 211, 211, 0.9);\n  color: #3d3d3d;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { MdBook, MdSearchOff, MdOutlineErrorOutline } from 'react-icons/md';\nimport { ContactForm } from 'components/forms/ContactAddForm/ContactAddForm';\nimport { ContactList } from 'components/Contacts/ListOfContacts';\nimport { getFilteredList } from 'redux/selectors';\nimport { Filter } from 'components/ContactsFilter/ContactsFilter';\nimport { selectError, selectIsLoading, selectAllContacts } from '../redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  NothingAdded,\n  NotFound,\n  Error,\n} from 'components/reusables/Notifications/Notifications.styled';\nimport { Loader } from 'components/reusables/Loader/Loader';\nimport { useAuth } from 'utils/hooks';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const { isLoading } = useAuth();\n  const contacts = useSelector(selectAllContacts);\n  const filteredList = useSelector(getFilteredList);\n  const contactIsLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your Book</title>\n      </Helmet>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <h1>Phonebook</h1>\n          <ContactForm />\n          <h2>Contacts</h2>\n          {contactIsLoading && !error && <Loader />}\n          {!contactIsLoading && !error && contacts.length === 0 && (\n            <NothingAdded>\n              <MdBook size={25} />\n              This Book is empty. Yet.\n            </NothingAdded>\n          )}\n          {contacts.length > 0 && <Filter />}\n          {filteredList.length > 0 && <ContactList />}\n          {contacts.length > 0 && filteredList.length === 0 && (\n            <NotFound>\n              <MdSearchOff size={25} />\n              Sorry, no one's here!\n            </NotFound>\n          )}\n          {error && (\n            <Error>\n              <MdOutlineErrorOutline size={25} color=\"#b24a4a\" />\n              Oops! Something went wrong...\n            </Error>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["FormContainer","styled","FormTable","FormLabels","Label","FormInputs","Input","AddBtn","selectAllContacts","state","contacts","selectIsLoading","isLoading","selectError","error","ContactForm","useSelector","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","evt","target","value","autoComplete","onSubmit","preventDefault","newContact","some","contact","trim","toLowerCase","toast","icon","size","color","addContact","then","response","catch","message","htmlFor","type","id","placeholder","onChange","required","pattern","title","ContactsList","Item","ContactInfo","DeleteBtn","Contact","idToDelete","setIdToDelete","handleDelete","deleteContact","DeleteInProgress","onClick","disabled","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilter","filter","getFilteredList","normalizedFilter","includes","ContactList","listOfContacts","SearchForm","Filter","autoFocus","setFilter","NothingAdded","NotFound","Contacts","useEffect","fetchContacts","useAuth","filteredList","contactIsLoading","Loader"],"sourceRoot":""}